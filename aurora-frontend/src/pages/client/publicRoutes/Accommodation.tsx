import { useState } from 'react';

export default function AccommodationPage() {
  const [selectedCategory, setSelectedCategory] = useState('all');

  const rooms = [
    {
      id: 1,
      name: 'Standard Room',
      category: 'standard',
      price: '800.000',
      image: 'üõèÔ∏è',
      area: '25m¬≤',
      guests: 2,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'ƒêi·ªÅu h√≤a'],
      description: 'Ph√≤ng ti√™u chu·∫©n tho·∫£i m√°i v·ªõi ƒë·∫ßy ƒë·ªß ti·ªán nghi c∆° b·∫£n'
    },
    {
      id: 2,
      name: 'Deluxe Room',
      category: 'deluxe',
      price: '1.200.000',
      image: 'üè®',
      area: '35m¬≤',
      guests: 2,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'View th√†nh ph·ªë', 'Ban c√¥ng'],
      description: 'Ph√≤ng deluxe r·ªông r√£i v·ªõi view th√†nh ph·ªë tuy·ªát ƒë·∫πp'
    },
    {
      id: 3,
      name: 'Family Suite',
      category: 'suite',
      price: '1.800.000',
      image: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
      area: '50m¬≤',
      guests: 4,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'Ph√≤ng kh√°ch ri√™ng', 'B·∫øp nh·ªè'],
      description: 'Suite gia ƒë√¨nh ho√†n h·∫£o cho c√°c chuy·∫øn du l·ªãch c√πng ng∆∞·ªùi th√¢n'
    },
    {
      id: 4,
      name: 'Executive Suite',
      category: 'suite',
      price: '2.500.000',
      image: 'üè∞',
      area: '65m¬≤',
      guests: 2,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'Ph√≤ng l√†m vi·ªác', 'Jacuzzi'],
      description: 'Suite executive sang tr·ªçng d√†nh cho kh√°ch VIP'
    },
    {
      id: 5,
      name: 'Presidential Suite',
      category: 'presidential',
      price: '5.000.000',
      image: 'üëë',
      area: '120m¬≤',
      guests: 4,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'Butler service', 'Spa ri√™ng', 'S√¢n th∆∞·ª£ng'],
      description: 'Ph√≤ng t·ªïng th·ªëng xa hoa nh·∫•t v·ªõi d·ªãch v·ª• butler 24/7'
    },
    {
      id: 6,
      name: 'Ocean View Deluxe',
      category: 'deluxe',
      price: '1.500.000',
      image: 'üåä',
      area: '40m¬≤',
      guests: 2,
      amenities: ['Wi-Fi mi·ªÖn ph√≠', 'TV LCD', 'Minibar', 'View bi·ªÉn', 'Ban c√¥ng l·ªõn'],
      description: 'Ph√≤ng deluxe v·ªõi view bi·ªÉn tuy·ªát ƒë·∫πp v√† ban c√¥ng r·ªông r√£i'
    }
  ];

  const categories = [
    { id: 'all', name: 'T·∫•t c·∫£ ph√≤ng' },
    { id: 'standard', name: 'Standard' },
    { id: 'deluxe', name: 'Deluxe' },
    { id: 'suite', name: 'Suite' },
    { id: 'presidential', name: 'Presidential' }
  ];

  const filteredRooms = selectedCategory === 'all' 
    ? rooms 
    : rooms.filter(room => room.category === selectedCategory);

  return (
    <div className="min-h-screen">
      {/* Hero Section */}
      <section className="relative h-96 bg-gradient-to-r from-blue-600 to-purple-700 flex items-center justify-center">
        <div className="text-center text-white px-4">
          <h1 className="text-4xl md:text-5xl font-bold mb-4">Ph√≤ng ngh·ªâ</h1>
          <p className="text-xl opacity-90">Kh√°m ph√° c√°c lo·∫°i ph√≤ng sang tr·ªçng v√† hi·ªán ƒë·∫°i</p>
        </div>
      </section>

      {/* Filter Section */}
      <section className="py-8 bg-gray-50">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex flex-wrap gap-4 justify-center">
            {categories.map((category) => (
              <button
                key={category.id}
                onClick={() => setSelectedCategory(category.id)}
                className={`px-6 py-2 rounded-full font-medium transition-colors ${
                  selectedCategory === category.id
                    ? 'bg-blue-600 text-white'
                    : 'bg-white text-gray-700 hover:bg-gray-100'
                }`}
              >
                {category.name}
              </button>
            ))}
          </div>
        </div>
      </section>

      {/* Rooms Grid */}
      <section className="py-16">
        <div className="max-w-6xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {filteredRooms.map((room) => (
              <div key={room.id} className="bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow">
                <div className="h-48 bg-gradient-to-br from-blue-400 to-purple-500 flex items-center justify-center">
                  <span className="text-6xl">{room.image}</span>
                </div>
                
                <div className="p-6">
                  <div className="flex justify-between items-start mb-2">
                    <h3 className="text-xl font-semibold">{room.name}</h3>
                    <span className="text-2xl font-bold text-blue-600">{room.price}ƒë</span>
                  </div>
                  <p className="text-gray-600 mb-4">{room.description}</p>
                  
                  <div className="space-y-2 mb-4">
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-500">Di·ªán t√≠ch:</span>
                      <span className="font-medium">{room.area}</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-gray-500">S·ªë kh√°ch:</span>
                      <span className="font-medium">{room.guests} ng∆∞·ªùi</span>
                    </div>
                  </div>

                  <div className="mb-4">
                    <h4 className="text-sm font-medium text-gray-700 mb-2">Ti·ªán nghi:</h4>
                    <div className="flex flex-wrap gap-1">
                      {room.amenities.slice(0, 3).map((amenity, index) => (
                        <span 
                          key={index} 
                          className="px-2 py-1 bg-gray-100 text-xs rounded text-gray-600"
                        >
                          {amenity}
                        </span>
                      ))}
                      {room.amenities.length > 3 && (
                        <span className="px-2 py-1 bg-gray-100 text-xs rounded text-gray-600">
                          +{room.amenities.length - 3} kh√°c
                        </span>
                      )}
                    </div>
                  </div>

                  <div className="flex gap-2">
                    <button className="flex-1 px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm font-medium">
                      ƒê·∫∑t ph√≤ng
                    </button>
                    <button className="px-4 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50 transition-colors text-sm font-medium">
                      Chi ti·∫øt
                    </button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Booking Info */}
      <section className="py-16 bg-gray-50">
        <div className="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 text-center">
          <h2 className="text-3xl font-bold text-gray-900 mb-4">Th√¥ng tin ƒë·∫∑t ph√≤ng</h2>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 mt-8">
            <div>
              <div className="text-2xl mb-2">üìû</div>
              <h3 className="font-semibold mb-2">ƒê·∫∑t ph√≤ng qua ƒëi·ªán tho·∫°i</h3>
              <p className="text-gray-600">(+84) 28 3822 5678</p>
            </div>
            <div>
              <div className="text-2xl mb-2">üíª</div>
              <h3 className="font-semibold mb-2">ƒê·∫∑t ph√≤ng online</h3>
              <p className="text-gray-600">Nhanh ch√≥ng v√† ti·ªán l·ª£i 24/7</p>
            </div>
            <div>
              <div className="text-2xl mb-2">üéÅ</div>
              <h3 className="font-semibold mb-2">∆Øu ƒë√£i ƒë·∫∑c bi·ªát</h3>
              <p className="text-gray-600">Gi·∫£m 15% cho ƒë·∫∑t ph√≤ng s·ªõm</p>
            </div>
          </div>
        </div>
      </section>
    </div>
  );
}
